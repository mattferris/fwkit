#!/bin/sh

action=$1
workdir=$2

libdir=/var/lib/fwkit
if [ ! -z "$FWKIT_LIBDIR" ]; then
    libdir=$FWKIT_LIBDIR
fi

case $action in

    clean)
        if [ -f "$libdir/cached.rules" ]; then
            rm "$libdir/cached.rules"
            echo "cleaned cached rules"
        else
            echo "no cached rules to clean"
        fi
	;;

    compile)
            if [ -f "$libdir/compile.tmp" ]; then
                rm "$libdir/compiled.tmp"
            fi

            if [ ! -d "$workdir" ]; then
                echo "error: working directory $workdir doesn't exist or isn't a directory"
                exit 1
            fi

            if [ ! -e "$workdir/role.active" ]; then
                echo "error: no role specified"
                exit 1
            fi

            policy="$workdir/role.active/policy.rules"
            if [ -f "$policy" ]; then
                cat "$policy" >> "$libdir/compiled.tmp"
            fi

            locsrv="$workdir/role.active/services.local"
            srvnum=$( find "$locsrv" | wc -l )
            if [ -d "$locsrv" -a "$srvnum" -gt 1 ]; then
                cat "$locsrv/*" >> "$libdir/compiled.tmp"
            fi

            rmtsrv="$workdir/role.active/services.remote"
            srvnum=$( find "$rmtsrv" | wc -l )
            if [ -d "$rmtsrv" -a "$srvnum" -gt 1 ]; then
                cat "$rmtsrv/*" >> "$libdir/compiled.tmp"
            fi

            if [ -d "$workdir/rules.d" ]; then
                for i in $( ls -1 "$workdir/rules.d" ); do
                    cat "$workdir/rules.d/$i" >> "$libdir/compiled.tmp"
                done
            fi

            if [ ! -f "$libdir/compiled.tmp" ]; then
                echo "notice: no rules found!"
                exit
            fi

            mv "$libdir/compiled.tmp" "$libdir/compiled.rules"

            if [ -f "$libdir/cached.rules" ]; then
                rm "$libdir/cached.rules"
            fi

            echo "comiled rules into $libdir/compiled.rules"
        ;;

    load)
        if [ -f "$libdir/cached.rules" ]; then
            echo -n "loading cached rules..."
            /bin/iptables-restore < "$libdir/cached.rules"
            echo "done"
        else
            echo -n "loading compiled rules..."
            $( /bin/sh "$libdir/compiled.rules" )
            echo "done"
        fi
        ;;

    unload)
        /bin/iptables-save > "$libdir/cached.rules"

        iptables -P INPUT ACCEPT
        iptables -P OUTPUT ACCEPT
        iptables -P FORWARD ACCEPT
        iptables -F -t filter
        iptables -F -t nat
        iptables -F -t mangle
        iptables -F -t raw
        iptables -F -t security
        iptables -X

        echo "rules unloaded"
        ;;

    *)
        echo "usage: $0 { clean | compile | load | unload } dir"
        exit 1
        ;;

esac
